{"version":3,"sources":["ressources/img/hundertachtzigrad.png","ressources/img/foto.jpg","App.js","serviceWorker.js","index.js"],"names":["module","exports","theme","responsiveFontSizes","createMuiTheme","palette","typography","fontFamily","join","App","className","style","backgroundImage","bg","backgroundColor","backgroundSize","backgroundPosition","backgroundRepeat","width","height","position","overflowY","ThemeProvider","alt","src","logo","container","marginTop","flexDirection","justifyContent","alignContent","display","flexWrap","color","flexGrow","item","minWidth","margin","Typography","variant","paddingBottom","title","top","left","border","allowFullScreen","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"0GAAAA,EAAOC,QAAU,IAA0B,+C,mBCA3CD,EAAOC,QAAU,IAA0B,kC,4OCOrCC,EAAQC,YAAoBC,YAAe,CAC/CC,QAAS,GAGTC,WAAY,CACVC,WAAY,CACV,eACA,yBACA,eACA,YACA,UACA,UACAC,KAAK,SA8JIC,MAtJf,WACE,OACE,yBAAKC,UAAU,MACbC,MAAO,CACLC,gBAAgB,OAAD,OAASC,IAAT,KACfC,gBAAiB,QACjBC,eAAgB,YAChBC,mBAAoB,gBACpBC,iBAAkB,YAClBC,MAAO,OACPC,OAAQ,QACRC,SAAU,QACVC,UAAW,WAEb,kBAACC,EAAA,EAAD,CAAepB,MAAOA,GACpB,yBACEQ,UAAU,SACVC,MAAO,CACLS,SAAU,SACVF,MAAO,OACPC,OAAQ,UAEV,yBACEI,IAAI,OACJC,IAAKC,IACLd,MAAO,CACLO,MAAO,YAGb,yBACEP,MAAO,CACLQ,OAAQ,uBAEV,yBAAKO,WAAS,EAACf,MAAO,CACpBgB,UAAW,OACXT,MAAO,OACPC,OAAQ,oBACRS,cAAe,MACfC,eAAgB,SAChBC,aAAc,aACdC,QAAS,OACTC,SAAU,OACVC,MAAO,QACPC,SAAU,IAEV,yBAAKC,MAAI,EAACxB,MAAO,CAAEO,MAAO,MAAOkB,SAAU,QAASC,OAAQ,SAC1D,kBAACC,EAAA,EAAD,CAAYC,QAAQ,aAApB,mBAGA,yBAAK7B,UAAU,kBAAkBC,MAAO,CACtCS,SAAU,WACVF,MAAO,OACPsB,cAAe,WAEf,4BACEC,MAAM,aACN9B,MAAO,CACLS,SAAU,WACVsB,IAAK,EACLC,KAAM,EACNzB,MAAO,OACPC,OAAQ,OACRyB,OAAQ,GAEVC,iBAAe,EACfrB,IAAI,qKAIV,yBAAKW,MAAI,EAACxB,MAAO,CAAEO,MAAO,MAAOkB,SAAU,QAASC,OAAQ,SAC1D,kBAACC,EAAA,EAAD,CAAYC,QAAQ,aAApB,aAGA,yBAAK7B,UAAU,kBAAkBC,MAAO,CACtCS,SAAU,WACVF,MAAO,OACPsB,cAAe,WAEf,4BACEC,MAAM,YACN9B,MAAO,CACLS,SAAU,WACVsB,IAAK,EACLC,KAAM,EACNzB,MAAO,OACPC,OAAQ,OACRyB,OAAQ,GAEVC,iBAAe,EACfrB,IAAI,0KCxGFsB,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAASC,SAASC,eAAe,SD6H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBC,MAAK,SAAAC,GACJA,EAAaC,gBAEdC,OAAM,SAAAC,GACLC,QAAQD,MAAMA,EAAME,c","file":"static/js/main.1dfcad63.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/hundertachtzigrad.88899a64.png\";","module.exports = __webpack_public_path__ + \"static/media/foto.f51a8846.jpg\";","import React from 'react';\nimport logo from './ressources/img/hundertachtzigrad.png';\nimport './App.css';\nimport { responsiveFontSizes, createMuiTheme, ThemeProvider, Typography } from '@material-ui/core';\nimport bg from './ressources/img/foto.jpg';\n\n\nconst theme = responsiveFontSizes(createMuiTheme({\n  palette: {\n    // error: will use the default color\n  },\n  typography: {\n    fontFamily: [\n      'Avenir Heavy',\n      \"AppleSDGothicNeo-Light\",\n      \"Avenir-Light\",\n      \"Helvetica\",\n      \"Verdana\",\n      \"Roboto\"\n    ].join(','),\n  },\n\n}));\n\n\n//font: Avenir Heavy\n//logo color: #245c4e;\nfunction App() {\n  return (\n    <div className=\"App\"\n      style={{\n        backgroundImage: `url(${bg})`,\n        backgroundColor: \"black\",\n        backgroundSize: \"auto 100%\",\n        backgroundPosition: \"center center\",\n        backgroundRepeat: \"no-repeat\",\n        width: \"100%\",\n        height: \"100vh\",\n        position: \"fixed\",\n        overflowY: \"scroll\"\n      }}>\n      <ThemeProvider theme={theme}>\n        <div\n          className=\"navbar\"\n          style={{\n            position: \"static\",\n            width: \"100%\",\n            height: \"150px\"\n          }}>\n          <img\n            alt=\"logo\"\n            src={logo}\n            style={{\n              width: \"200px\"\n            }} />\n        </div>\n        <div\n          style={{\n            height: \"calc(100vh- 150px)\",\n          }}>\n          <div container style={{\n            marginTop: \"50px\",\n            width: \"100%\",\n            height: \"calc(100vh-150px)\",\n            flexDirection: 'row',\n            justifyContent: 'center',\n            alignContent: 'flex-start',\n            display: \"flex\",\n            flexWrap: \"wrap\",\n            color: \"white\",\n            flexGrow: 1,\n          }}>\n            <div item style={{ width: \"40%\", minWidth: \"350px\", margin: \"15px\" }}>\n              <Typography variant=\"subtitle1\">\n                SchmitzBrothers\n            </Typography>\n              <div className=\"video-container\" style={{\n                position: \"relative\",\n                width: \"100%\",\n                paddingBottom: \"56.25%\",\n              }}>\n                <iframe\n                  title=\"Main Video\"\n                  style={{\n                    position: \"absolute\",\n                    top: 0,\n                    left: 0,\n                    width: \"100%\",\n                    height: \"100%\",\n                    border: 0,\n                  }}\n                  allowFullScreen\n                  src=\"https://www.youtube.com/embed/fmoOiABImQQ?autoplay=0&fs=0&iv_load_policy=3&showinfo=0&rel=0&cc_load_policy=0&start=0&end=0&origin=https://youtubeembedcode.com\"\n                />\n              </div>\n            </div>\n            <div item style={{ width: \"40%\", minWidth: \"350px\", margin: \"15px\" }}>\n              <Typography variant=\"subtitle1\">\n                Making Of\n            </Typography>\n              <div className=\"video-container\" style={{\n                position: \"relative\",\n                width: \"100%\",\n                paddingBottom: \"56.25%\",\n              }}>\n                <iframe\n                  title=\"making-of\"\n                  style={{\n                    position: \"absolute\",\n                    top: 0,\n                    left: 0,\n                    width: \"100%\",\n                    height: \"100%\",\n                    border: 0,\n                  }}\n                  allowFullScreen\n                  src=\"https://www.youtube.com/embed/CEYE4NKRzIc?autoplay=0&fs=1&iv_load_policy=3&showinfo=0&rel=0&cc_load_policy=0&start=0&end=0&origin=https://youtubeembedcode.com\"\n                />\n              </div>\n            </div>\n          </div>\n\n        </div>\n      </ThemeProvider>\n    </div>\n  );\n}\n/**<div item style={{ width: \"40%\", minWidth: \"350px\", margin: \"15px\" }}>\n              <Typography variant=\"subtitle1\">\n                SchmitzBrothers\n            </Typography>\n              <div className=\"video-container\" style={{\n                position: \"relative\",\n                width: \"100%\",\n                paddingBottom: \"56.25%\",\n              }}>\n                <iframe\n                  title=\"Main Video\"\n                  style={{\n                    position: \"absolute\",\n                    top: 0,\n                    left: 0,\n                    width: \"100%\",\n                    height: \"100%\",\n                    border: 0,\n                  }}\n                  allowFullScreen\n                  src=\"https://www.youtube.com/embed/fmoOiABImQQ?autoplay=0&fs=0&iv_load_policy=3&showinfo=0&rel=0&cc_load_policy=0&start=0&end=0&origin=https://youtubeembedcode.com\"\n                />\n              </div>\n            </div>\n            <div item style={{ width: \"40%\", minWidth: \"350px\", margin: \"15px\" }}>\n              <Typography variant=\"subtitle1\">\n              Making Of SchmitzBrothers\n            </Typography>\n              <div className=\"video-container\" style={{\n                position: \"relative\",\n                width: \"100%\",\n                paddingBottom: \"56.25%\",\n              }}>\n                <iframe\n                  title=\"making-of\"\n                  style={{\n                    position: \"absolute\",\n                    top: 0,\n                    left: 0,\n                    width: \"100%\",\n                    height: \"100%\",\n                    border: 0,\n                  }}\n                  allowFullScreen\n                  src=\"https://www.youtube.com/embed/CEYE4NKRzIc?autoplay=0&fs=1&iv_load_policy=3&showinfo=0&rel=0&cc_load_policy=0&start=0&end=0&origin=https://youtubeembedcode.com\"\n                />\n              </div>\n            </div>\n */\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}